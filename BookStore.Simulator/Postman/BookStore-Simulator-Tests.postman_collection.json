{
  "info": {
    "name": "BookStore API Simulator - All Endpoints",
    "description": "Comprehensive test collection for all API Simulator mock endpoints including Claude, OpenAI, Ollama, Bedrock, and BookStore REST API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_postman_id": "api-simulator-bookstore-tests"
  },
  "variable": [
    {
      "key": "simulator_ui",
      "value": "http://localhost:28880",
      "type": "string",
      "description": "API Simulator UI and Management endpoint"
    },
    {
      "key": "claude_port",
      "value": "17070",
      "type": "string",
      "description": "Claude API mock port"
    },
    {
      "key": "openai_port",
      "value": "18080",
      "type": "string",
      "description": "OpenAI API mock port"
    },
    {
      "key": "ollama_port",
      "value": "11434",
      "type": "string",
      "description": "Ollama API mock port"
    },
    {
      "key": "bedrock_port",
      "value": "19090",
      "type": "string",
      "description": "AWS Bedrock API mock port"
    },
    {
      "key": "books_api_port",
      "value": "17777",
      "type": "string",
      "description": "BookStore REST API mock port"
    },
    {
      "key": "book_id",
      "value": "68dedb16887eae6ff6743f51",
      "type": "string",
      "description": "Test book ID"
    }
  ],
  "item": [
    {
      "name": "Simulator Management",
      "description": "API Simulator management and configuration endpoints",
      "item": [
        {
          "name": "Get Simulator Settings",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{simulator_ui}}/api/agent/settings",
              "host": ["{{simulator_ui}}"],
              "path": ["api", "agent", "settings"]
            },
            "description": "Retrieve current simulator configuration"
          },
          "response": []
        },
        {
          "name": "Get Simulator UI",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{simulator_ui}}/ui/",
              "host": ["{{simulator_ui}}"],
              "path": ["ui", ""]
            },
            "description": "Open simulator web UI dashboard"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Claude API Mock (Port 17070)",
      "description": "Anthropic Claude Messages API simulation",
      "item": [
        {
          "name": "Claude Messages API",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "anthropic-version",
                "value": "2023-06-01"
              },
              {
                "key": "x-api-key",
                "value": "sk-ant-test-key",
                "description": "API key (mock - any value works)"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"model\": \"claude-3-5-sonnet-20241022\",\n  \"max_tokens\": 1024,\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": \"Please summarize the key themes and significance of this book.\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "http://localhost:{{claude_port}}/v1/messages",
              "protocol": "http",
              "host": ["localhost"],
              "port": "{{claude_port}}",
              "path": ["v1", "messages"]
            },
            "description": "Claude Messages API - Returns simulated response with 256 output tokens"
          },
          "response": []
        }
      ]
    },
    {
      "name": "OpenAI API Mock (Port 18080)",
      "description": "OpenAI Chat Completions API simulation",
      "item": [
        {
          "name": "Chat Completions",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer sk-test-key-12345",
                "description": "Bearer token (mock - any value works)"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"model\": \"gpt-4o\",\n  \"messages\": [\n    {\n      \"role\": \"system\",\n      \"content\": \"You are a literary analysis expert.\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"Summarize the main themes of this book.\"\n    }\n  ],\n  \"temperature\": 0.7,\n  \"max_tokens\": 500\n}"
            },
            "url": {
              "raw": "http://localhost:{{openai_port}}/v1/chat/completions",
              "protocol": "http",
              "host": ["localhost"],
              "port": "{{openai_port}}",
              "path": ["v1", "chat", "completions"]
            },
            "description": "OpenAI Chat Completions - Returns GPT-4o formatted response with 300 tokens"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Ollama API Mock (Port 11434)",
      "description": "Ollama local LLM API simulation",
      "item": [
        {
          "name": "Generate Text",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"model\": \"llama3.2\",\n  \"prompt\": \"Provide a literary analysis of this book, focusing on its themes, characters, and cultural significance.\",\n  \"stream\": false\n}"
            },
            "url": {
              "raw": "http://localhost:{{ollama_port}}/api/generate",
              "protocol": "http",
              "host": ["localhost"],
              "port": "{{ollama_port}}",
              "path": ["api", "generate"]
            },
            "description": "Ollama Generate API - Text generation with performance metrics"
          },
          "response": []
        },
        {
          "name": "Chat Completions",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"model\": \"llama3.2\",\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": \"Analyze the literary significance of this work.\"\n    }\n  ],\n  \"stream\": false\n}"
            },
            "url": {
              "raw": "http://localhost:{{ollama_port}}/api/chat",
              "protocol": "http",
              "host": ["localhost"],
              "port": "{{ollama_port}}",
              "path": ["api", "chat"]
            },
            "description": "Ollama Chat API - Chat-formatted responses"
          },
          "response": []
        }
      ]
    },
    {
      "name": "AWS Bedrock Mock (Port 19090)",
      "description": "AWS Bedrock (Claude) API simulation",
      "item": [
        {
          "name": "Invoke Model (Claude)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-Amzn-Bedrock-Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"anthropic_version\": \"bedrock-2023-05-31\",\n  \"max_tokens\": 1024,\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": \"Provide a comprehensive summary of this book's themes and literary merit.\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "http://localhost:{{bedrock_port}}/model/us.anthropic.claude-sonnet-4-v1:0/invoke",
              "protocol": "http",
              "host": ["localhost"],
              "port": "{{bedrock_port}}",
              "path": ["model", "us.anthropic.claude-sonnet-4-v1:0", "invoke"]
            },
            "description": "Bedrock Invoke Model - Claude via AWS Bedrock (non-streaming)"
          },
          "response": []
        },
        {
          "name": "Invoke Model Stream",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"anthropic_version\": \"bedrock-2023-05-31\",\n  \"max_tokens\": 512,\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": \"Briefly summarize this book.\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "http://localhost:{{bedrock_port}}/model/us.anthropic.claude-sonnet-4-v1:0/invoke-with-response-stream",
              "protocol": "http",
              "host": ["localhost"],
              "port": "{{bedrock_port}}",
              "path": ["model", "us.anthropic.claude-sonnet-4-v1:0", "invoke-with-response-stream"]
            },
            "description": "Bedrock Streaming - Simulated streaming response"
          },
          "response": []
        }
      ]
    },
    {
      "name": "BookStore REST API Mock (Port 17777)",
      "description": "Full CRUD operations for BookStore API",
      "item": [
        {
          "name": "List All Books",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:{{books_api_port}}/api/v1/Books",
              "protocol": "http",
              "host": ["localhost"],
              "port": "{{books_api_port}}",
              "path": ["api", "v1", "Books"]
            },
            "description": "GET /api/v1/Books - Returns list of books"
          },
          "response": []
        },
        {
          "name": "Get Book by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:{{books_api_port}}/api/v1/Books/{{book_id}}",
              "protocol": "http",
              "host": ["localhost"],
              "port": "{{books_api_port}}",
              "path": ["api", "v1", "Books", "{{book_id}}"]
            },
            "description": "GET /api/v1/Books/{id} - Returns specific book with details"
          },
          "response": []
        },
        {
          "name": "Create Book",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"The Midnight Library\",\n  \"author\": \"Matt Haig\",\n  \"isbn\": \"978-0-525-55948-1\",\n  \"publishedDate\": \"2020-08-13T00:00:00Z\",\n  \"genre\": \"Fiction\",\n  \"pageCount\": 304,\n  \"description\": \"A dazzling novel about all the choices that go into a life well lived.\"\n}"
            },
            "url": {
              "raw": "http://localhost:{{books_api_port}}/api/v1/Books",
              "protocol": "http",
              "host": ["localhost"],
              "port": "{{books_api_port}}",
              "path": ["api", "v1", "Books"]
            },
            "description": "POST /api/v1/Books - Create new book (returns 201 Created)"
          },
          "response": []
        },
        {
          "name": "Update Book",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": \"{{book_id}}\",\n  \"title\": \"Updated Book Title\",\n  \"author\": \"Updated Author Name\",\n  \"isbn\": \"978-0-123-45678-9\",\n  \"publishedDate\": \"2024-01-15T00:00:00Z\",\n  \"genre\": \"Literary Fiction\",\n  \"pageCount\": 350,\n  \"description\": \"An updated description of this remarkable work.\"\n}"
            },
            "url": {
              "raw": "http://localhost:{{books_api_port}}/api/v1/Books/{{book_id}}",
              "protocol": "http",
              "host": ["localhost"],
              "port": "{{books_api_port}}",
              "path": ["api", "v1", "Books", "{{book_id}}"]
            },
            "description": "PUT /api/v1/Books/{id} - Update existing book"
          },
          "response": []
        },
        {
          "name": "Delete Book",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "http://localhost:{{books_api_port}}/api/v1/Books/{{book_id}}",
              "protocol": "http",
              "host": ["localhost"],
              "port": "{{books_api_port}}",
              "path": ["api", "v1", "Books", "{{book_id}}"]
            },
            "description": "DELETE /api/v1/Books/{id} - Delete book (returns 204 No Content)"
          },
          "response": []
        },
        {
          "name": "Generate AI Summary",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"provider\": \"simulated\",\n  \"model\": \"simulation-v1\"\n}"
            },
            "url": {
              "raw": "http://localhost:{{books_api_port}}/api/v1/Books/{{book_id}}/generate-summary",
              "protocol": "http",
              "host": ["localhost"],
              "port": "{{books_api_port}}",
              "path": ["api", "v1", "Books", "{{book_id}}", "generate-summary"]
            },
            "description": "POST /api/v1/Books/{id}/generate-summary - Generate AI-powered book summary"
          },
          "response": []
        }
      ]
    }
  ]
}
